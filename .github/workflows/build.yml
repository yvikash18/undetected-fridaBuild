name: undetected-frida-build-arm64

on:
  schedule:
    - cron: "0 9/12 * * *"
  workflow_dispatch:
    inputs:
      frida_version:
        description: 'Frida version tag to build (e.g. 16.5.2 or v16.5.2). Default: 16.5.2'
        required: false
        default: '16.5.2'

env:
  # optional allow-list (comma-separated). Leave empty to allow any tag.
  ALLOWED_FRIDA_VERSIONS: ""

jobs:
  check:
    runs-on: ubuntu-22.04
    outputs:
      FRIDA_VERSION: ${{ steps.set.outputs.FRIDA_VERSION }}
      FRIDA_TAG: ${{ steps.set.outputs.FRIDA_TAG }}
    steps:
      - name: Resolve FRIDA_VERSION and FRIDA_TAG
        id: set
        run: |
          set -euo pipefail
          INPUT_VERSION="${{ github.event.inputs.frida_version || '16.5.2' }}"
          ALLOWED="${ALLOWED_FRIDA_VERSIONS:-}"

          if [ -n "$INPUT_VERSION" ] && [ "$INPUT_VERSION" != "latest" ]; then
            FRIDA_VERSION="$INPUT_VERSION"
          else
            FRIDA_VERSION="$(curl -fsSL https://api.github.com/repos/frida/frida/releases/latest | jq -r .tag_name)"
            [ -n "$FRIDA_VERSION" ] && [ "$FRIDA_VERSION" != "null" ] || { echo "Failed to determine latest frida release"; exit 1; }
          fi

          # Normalize tag for git (strip leading 'v' if present)
          FRIDA_TAG="${FRIDA_VERSION#v}"

          # optional allow-list
          if [ -n "$ALLOWED" ]; then
            IFS=',' read -r -a arr <<< "$ALLOWED"
            ok=0
            for v in "${arr[@]}"; do
              if [ "$v" = "$FRIDA_VERSION" ] || [ "$v" = "$FRIDA_TAG" ]; then ok=1; break; fi
            done
            [ "$ok" -eq 1 ] || { echo "Tag '${FRIDA_VERSION}' not allowed (${ALLOWED})"; exit 1; }
          fi

          echo "FRIDA_VERSION=${FRIDA_VERSION}" >> "${GITHUB_OUTPUT}"
          echo "FRIDA_TAG=${FRIDA_TAG}" >> "${GITHUB_OUTPUT}"
          echo "Resolved FRIDA_VERSION=${FRIDA_VERSION} (git tag: ${FRIDA_TAG})"

  build-arm64:
    runs-on: ubuntu-22.04
    needs: check
    if: needs.check.outputs.FRIDA_TAG != ''
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node 18
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Setup JDK 8
        uses: actions/setup-java@v4
        with:
          java-version: "8"
          distribution: temurin

      - name: Setup Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install system packages & pip deps
        run: |
          set -euxo pipefail
          [ $(id -u) -eq 0 ] || SUDO=sudo
          ${SUDO} apt-get update
          DEBIAN_FRONTEND=noninteractive ${SUDO} apt-get install -y \
            build-essential ninja-build gcc-multilib g++-multilib \
            lib32stdc++-9-dev flex bison libc6-dev libc6-dev-i386 \
            xz-utils plzip zstd pigz gettext-base git jq curl unzip
          ${SUDO} /opt/hostedtoolcache/Python/3.12.*/x64/bin/pip3 install -U setuptools lief

      - name: NDK 25c setup
        run: |
          set -euxo pipefail
          curl -sSLO https://dl.google.com/android/repository/android-ndk-r25c-linux.zip
          [ "$(sha1sum android-ndk-r25c-linux.zip | awk '{print $1}')" = "53af80a1cce9144025b81c78c8cd556bff42bd0e" ] || exit 1
          unzip -qo android-ndk-r25c-linux.zip
          rm android-ndk-r25c-linux.zip
          mkdir -p "${RUNNER_TEMP}/android-ndk"
          mv android-ndk-r25c "${RUNNER_TEMP}/android-ndk/25.2.9519653"
          {
            echo "ANDROID_NDK=${RUNNER_TEMP}/android-ndk/25.2.9519653"
            echo "ANDROID_NDK_HOME=${RUNNER_TEMP}/android-ndk/25.2.9519653"
            echo "ANDROID_NDK_ROOT=${RUNNER_TEMP}/android-ndk/25.2.9519653"
            echo "ANDROID_NDK_LATEST_HOME=${RUNNER_TEMP}/android-ndk/25.2.9519653"
          } >> $GITHUB_ENV

      - name: Clone frida at tag and clone Frida-Patchs
        env:
          FRIDA_TAG: ${{ needs.check.outputs.FRIDA_TAG }}
        run: |
          set -euxo pipefail
          git clone --recurse-submodules --shallow-submodules --branch "${FRIDA_TAG}" https://github.com/frida/frida.git frida || {
            echo "Clone failed for tag '${FRIDA_TAG}'. Available tags (top 50):"
            git ls-remote --tags https://github.com/frida/frida | sed 's#.*/##' | sed 's/\^{}//' | sort -Vr | head -n50
            exit 1
          }
          git clone --depth=1 https://github.com/AsenOsen/frida-stealth.git Frida-Patchs || true

      - name: Apply patches (frida-core, frida-gum) if present
        run: |
          set -euxo pipefail
          PATCH_DIR="${GITHUB_WORKSPACE}/Frida-Patchs"
          FRIDA_DIR="${GITHUB_WORKSPACE}/frida"
          if [ -d "${PATCH_DIR}" ]; then
            CORE=( "${PATCH_DIR}/frida-core/patch.patch" "${PATCH_DIR}/frida-core/patches/patch.patch" "${PATCH_DIR}/frida-core/patches/frida-core.patch" )
            GUM=( "${PATCH_DIR}/frida-gum/patch.patch"  "${PATCH_DIR}/frida-gum/patches/patch.patch"  "${PATCH_DIR}/frida-gum/patches/frida-gum.patch" )
            for p in "${CORE[@]}"; do
              [ -f "$p" ] || continue
              echo "Applying frida-core patch $p"
              pushd "${FRIDA_DIR}/subprojects/frida-core"
              git apply --reject --whitespace=fix "$p" || true
              popd; break
            done
            for p in "${GUM[@]}"; do
              [ -f "$p" ] || continue
              echo "Applying frida-gum patch $p"
              pushd "${FRIDA_DIR}/subprojects/frida-gum"
              git apply --reject --whitespace=fix "$p" || true
              popd; break
            done
          else
            echo "Patch repo not found; skipping patch application."
          fi

      - name: Build Frida (android-arm64)
        run: |
          set -euxo pipefail
          pushd frida
          FRIDA_PREFIX="$(tr -cd 'a-z0-9' </dev/urandom | head -c32)" || true
          SESSION_SERVICE="$(tr -cd 'a-f0-9' </dev/urandom | head -c32)" || true
          export FRIDA_PREFIX SESSION_SERVICE

          ./configure \
            --prefix="${PWD}/build" \
            --host="android-arm64" \
            --enable-frida-tools \
            --enable-gadget \
            --enable-server \
            --enable-portal \
            -- -Dfrida-gum:devkits=gum,gumjs -Dfrida-core:devkits=core

          make -j"$(nproc)"
          popd

      - name: Post-process built binaries (anti-anti-frida)
        run: |
          set -euxo pipefail
          ANTISCRIPT="${GITHUB_WORKSPACE}/frida/subprojects/frida-core/src/anti-anti-frida.py"
          if [ -f "${ANTISCRIPT}" ]; then
            echo "Running anti-anti-frida..."
            # Primary targets for android-arm64:
            python3 "${ANTISCRIPT}" "frida/build/subprojects/frida-core/server/frida-server" || true
            python3 "${ANTISCRIPT}" "frida/build/subprojects/frida-core/lib/gadget/frida-gadget.so" || true
            python3 "${ANTISCRIPT}" "frida/build/subprojects/frida-core/lib/agent/frida-agent.so" || true
            # Tools (hosted under build/*/bin if generated for android toolchain)
            for f in frida/build/*/bin/*; do
              [ -f "$f" ] || continue
              python3 "${ANTISCRIPT}" "$f" || true
            done
          else
            echo "anti-anti-frida.py not found; skipping."
          fi

      - name: Package artifacts
        env:
          FRIDA_VERSION: ${{ needs.check.outputs.FRIDA_VERSION }}
        run: |
          set -euxo pipefail
          mkdir -p artifacts
          # server / gadget / agent
          find frida -path "*/build/subprojects/frida-core/server/frida-server" -type f -exec cp {} artifacts/ \; || true
          find frida -path "*/build/subprojects/frida-core/lib/gadget/frida-gadget.so" -type f -exec cp {} artifacts/ \; || true
          find frida -path "*/build/subprojects/frida-core/lib/agent/frida-agent.so" -type f -exec cp {} artifacts/ \; || true
          # cli tools (if any produced in android bin dir)
          find frida -path "*/build/*/bin/*" -type f -exec cp {} artifacts/ \; || true
          # include any patch rejects for debug
          find frida -name "*.rej" -type f -exec cp --parents {} artifacts/ \; || true
          tar -C artifacts -cvf "frida-artifacts-android-arm64-${FRIDA_VERSION}.tar" .

      - name: Upload artifact (android-arm64)
        uses: actions/upload-artifact@v4
        with:
          name: frida-android-arm64-${{ needs.check.outputs.FRIDA_VERSION }}
          path: frida-artifacts-android-arm64-*.tar
