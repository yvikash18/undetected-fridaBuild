name: undetected-frida

on:
  schedule:
    - cron: "0 9/12 * * *"
  workflow_dispatch:

env:
  FRIDA_VERSION: "16.5.2"

jobs:
  build:
    name: Build Frida (android / arm64)
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        arch: [arm64]
        os: [android]
    steps:
    - uses: actions/checkout@v4

    - name: Node 18 setup
      uses: actions/setup-node@v4
      with:
        node-version: 18

    - name: JDK 8 setup
      uses: actions/setup-java@v4
      with:
        java-version: "8"
        distribution: temurin

    - name: Python 3.12 setup
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: NDK 25c setup
      run: |
        curl -sSLO https://dl.google.com/android/repository/android-ndk-r25c-linux.zip
        [ "$(sha1sum android-ndk-r25c-linux.zip | awk '{print $1}')" = "53af80a1cce9144025b81c78c8cd556bff42bd0e" ] || exit 1
        unzip -qo android-ndk-r25c-linux.zip; rm android-ndk-r25c-linux.zip;
        rm -rf "${ANDROID_NDK%/*}/25.2.9519653"; mv -v android-ndk-r25c "${ANDROID_NDK%/*}/25.2.9519653"; export ANDROID_NDK="${ANDROID_NDK%/*}/25.2.9519653"
        export ANDROID_NDK_HOME="${ANDROID_NDK}" ANDROID_NDK_ROOT="${ANDROID_NDK}" ANDROID_NDK_LATEST_HOME="${ANDROID_NDK}"

    - name: Install dependencies
      run: |
        [ $(id -u) -eq 0 ] || SUDO=sudo
        ${SUDO} apt-get update && DEBIAN_FRONTEND=noninteractive ${SUDO} apt-get install -y build-essential ninja-build gcc-multilib g++-multilib lib32stdc++-9-dev flex bison libc6-dev libc6-dev-i386 xz-utils plzip zstd pigz gettext-base
        ${SUDO} /opt/hostedtoolcache/Python/3.12.*/x64/bin/pip3 install -U setuptools lief

        _CARCH="${{ matrix.arch }}"; if [ "${_CARCH%64}" = "${_CARCH}" ]; then
          pushd /opt/hostedtoolcache/Python/3.12.*/x64/include/python3.12; patch -Rp1 <${{ github.workspace }}/pyconfig.h-i686-x86_64.patch; popd
        fi

    - name: Build Frida
      env:
        ANDROID_NDK: "${ANDROID_NDK%/*}/25.2.9519653"
        ANDROID_NDK_HOME: "${ANDROID_NDK%/*}/25.2.9519653"
        ANDROID_NDK_ROOT: "${ANDROID_NDK%/*}/25.2.9519653"
        FRIDA_VERSION: ${{ env.FRIDA_VERSION }}
      run: |
        export ANDROID_NDK="${ANDROID_NDK%/*}/25.2.9519653"; export ANDROID_NDK_HOME="${ANDROID_NDK}" ANDROID_NDK_ROOT="${ANDROID_NDK}" ANDROID_NDK_LATEST_HOME="${ANDROID_NDK}"
        git clone --recurse-submodules https://github.com/frida/frida -b "${FRIDA_VERSION}"
        pushd frida

        set +e
        FRIDA_PREFIX="$(tr -cd 'a-z0-9' </dev/urandom | head -c32)" SESSION_SERVICE="$(tr -cd 'a-f0-9' </dev/urandom | head -c32)"
        set -e

        # apply local patches (if any) from repo siblings
        for k in strongR-frida florida rycoh99; do
          for i in "../${k}/"*; do
            pushd "subprojects/${i##*/}" || continue
            for j in "../../../${k}/${i##*/}/"*.patch; do
              FRIDA_PREFIX="${FRIDA_PREFIX}" SESSION_SERVICE="${SESSION_SERVICE}" envsubst <"${j}" | patch -Np1 || true
            done
            popd
          done
        done

        ./configure --prefix="${PWD}/build" --host="${{ matrix.os }}-${{ matrix.arch }}" --enable-frida-tools --enable-gadget --enable-server --enable-portal -- -Dfrida-gum:devkits=gum,gumjs -Dfrida-core:devkits=core
        make -j$(nproc)
        popd

    - name: Collect & compress build outputs
      run: |
        set -e
        mkdir -p artifacts/${{ matrix.arch }}

        pushd frida

        # Copy server and gadget into top-level artifacts dir for this run
        if [ -f "build/subprojects/frida-core/server/frida-server" ]; then
          python subprojects/frida-core/src/anti-anti-frida.py build/subprojects/frida-core/server/frida-server || true
          cp build/subprojects/frida-core/server/frida-server ../artifacts/${{ matrix.arch }}/frida-server-${{ matrix.arch }}
        fi

        if [ -f "build/subprojects/frida-core/lib/gadget/frida-gadget.so" ]; then
          cp build/subprojects/frida-core/lib/gadget/frida-gadget.so ../artifacts/${{ matrix.arch }}/frida-gadget-${{ matrix.arch }}.so
        fi

        # bundle devkits/examples (if any)
        for j in $(find build/subprojects -iname '*-example.c' 2>/dev/null || true); do
          _j="${j##*/}"
          _tar="../artifacts/${{ matrix.arch }}/build-${_j%-example.c}-devkit-${FRIDA_VERSION}-${{ matrix.os }}-${{ matrix.arch }}.tar"
          tar -cf "${_tar}" -C "${j%/*}" .
        done

        popd

        # compress everything into a single archive for this matrix cell
        pushd artifacts/${{ matrix.arch }}
        tar -caf ../../undetected-frida-${FRIDA_VERSION}-${{ matrix.os }}-${{ matrix.arch }}.tar.zst . || true
        popd

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: undetected-frida-${{ env.FRIDA_VERSION }}-${{ matrix.os }}-${{ matrix.arch }}
        path: |
          undetected-frida-${{ env.FRIDA_VERSION }}-${{ matrix.os }}-${{ matrix.arch }}.tar.zst
          artifacts/${{ matrix.arch }}/**
        if-no-files-found: warn
        retention-days: 7
        compression-level: 9
